#!/usr/bin/env python

# TODO: setup python 3
#       dependency injection?
#       integrate rxpy for async?

import argparse
import os
import platform
import statsd
import evdev #use the evdev event timestamp
from evdev import util
from evdev import ecodes

# temporary, statsd will do the insert
import sqlite3
client = sqlite3.connect('/home/tieme/workspace/test.sqlite')
def to_sqlite(metric):
    cursor = client.cursor()
    cursor.execute('INSERT INTO keypresses VALUES("1","press",' + str(metric) + ');')

PREFIX = os.path.basename(__file__) + '.' + platform.node()
statsd_client = statsd.StatsClient('localhost', 8125, PREFIX)
def to_statsd(metric, value):
    statsd_client.gauge(metric, value, delta=True)

def parse_args():
    parser = argparse.ArgumentParser(description='Monitor device input metrics')
    # parser.add_argument(...)
    return parser.parse_args()

def main():
    args = parse_args()

    print(evdev.list_devices())
    print
    keyboard = evdev.InputDevice('/dev/input/event3')
    print(keyboard)
    print
    print()

    for event in keyboard.read_loop():
        if event.type != ecodes.EV_KEY: continue
        if event.value != 1: continue
        print(util.categorize(event))
        to_statsd('keypress', 1)

if __name__ == "__main__":
    main()
